print(" on - off ")

local aimbotEnabled = settings["Aimbot_Enabled"] or false
local isRightClicking = false
local closestPlayer = nil
local targetPosition = nil

-- Function to find the closest player
local function GetClosestPlayer()
    local localPlayer = Players.LocalPlayer
    local character = localPlayer.Character
    if not character then return nil end

    local rootPart = character:FindFirstChild("Head")
    if not rootPart then return nil end

    local closestPlayer = nil
    local minDistance = math.huge
    local params = RaycastParams.new()
    params.FilterDescendantsInstances = {character}
    params.FilterType = Enum.RaycastFilterType.Exclude

    -- Loop through players to find the closest one
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= localPlayer and player.Character then
            local targetPart = player.Character:FindFirstChild("UpperTorso") or player.Character:FindFirstChild("HumanoidRootPart")
            if targetPart then
                local distance = (rootPart.Position - targetPart.Position).Magnitude
                if distance < minDistance then
                    -- Perform wall check if enabled
                    if settings["WallCheck"] then
                        local ray = workspace:Raycast(Camera.CFrame.Position, (targetPart.Position - Camera.CFrame.Position).Unit * 1000, params)
                        if ray and ray.Instance and ray.Instance:IsDescendantOf(player.Character) then
                            closestPlayer = player
                            minDistance = distance
                        end
                    else
                        closestPlayer = player
                        minDistance = distance
                    end
                end
            end
        end
    end
    return closestPlayer
end

-- Aimbot functionality that locks onto the closest player when right-clicking
RunService.Heartbeat:Connect(function()
    if aimbotEnabled and isRightClicking then
        -- Find the closest player
        closestPlayer = GetClosestPlayer()
        if closestPlayer then
            -- Get the target's position (head position)
            local target = closestPlayer.Character:FindFirstChild("Head")
            if target then
                targetPosition = target.Position + Vector3.new(0, 2, 0) -- Slight offset to the head
                local screenPos = Camera:WorldToScreenPoint(targetPosition)
                
                -- Ensure the camera is pointing at the target
                Camera.CFrame = CFrame.new(Camera.CFrame.Position, targetPosition)
            end
        end
    end
end)

-- Detecting when the right mouse button is pressed and released
UserInputService.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton2 then
        isRightClicking = true
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton2 then
        isRightClicking = false
    end
end)

-- Add a toggle for the aimbot to enable or disable it
mainTab:Toggle("Enable Aimbot", function(state)
    aimbotEnabled = state
    UpdateSetting("Aimbot_Enabled", state)
end, aimbotEnabled)
