local HttpService = game:GetService("HttpService")
local UserInputService = game:GetService("UserInputService")

local configFile = "voltex_config.json"

local function SaveConfig(settings)
    pcall(function()
        writefile(configFile, HttpService:JSONEncode(settings))
    end)
end

local function LoadConfig()
    if isfile(configFile) then
        local success, data = pcall(function() return HttpService:JSONDecode(readfile(configFile)) end)
        if success then
            return data
        else
            print("Error reading config file.")
            return {}
        end
    end
    return {}
end

local settings = LoadConfig()

local function UpdateSetting(key, value)
    settings[key] = value
    SaveConfig(settings)
end

local VLib = loadstring(game:HttpGet("https://pastebin.com/raw/Mb49kKTP"))()

MAINTTL = "Free Voltex Hub"

local win = VLib:Window("Universal", Color3.fromRGB(196, 40, 28), {
    Image = "rbxassetid://9478562327"
})

local homeTab = win:Tab("Home")
local mainTab = win:Tab("Main")
local supportedGamesTab = win:Tab("Supported Games")
local miscTab = win:Tab("Misc")
local clientTab = win:Tab("Client")
local uiSettingsTab = win:Tab("UI Settings")

homeTab:Label("Made By: Voltex")
homeTab:Button("Join Discord", function()
    setclipboard("https://discord.gg/9NMFBCq7")
    print("Discord link copied to clipboard!")
end)

uiSettingsTab:Button("Destroy Gui", function()
    game.CoreGui["Library"]:Destroy()
end)

local ScreenGui = Instance.new("ScreenGui", game.CoreGui)
ScreenGui.Name = "VoltexHubUI"

local ToggleButton = Instance.new("TextButton", ScreenGui)
ToggleButton.Size = UDim2.new(0, 50, 0, 50)
ToggleButton.Position = settings["SquareUI_Pos"] or UDim2.new(1, -60, 0, 10)
ToggleButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
ToggleButton.Text = "â˜°"
ToggleButton.TextSize = 30
ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ToggleButton.BorderSizePixel = 2
ToggleButton.BorderColor3 = Color3.fromRGB(0, 0, 0)

local uiVisible = settings["UI_Visible"] ~= false
local function ToggleUI()
    uiVisible = not uiVisible
    UpdateSetting("UI_Visible", uiVisible)

    if uiVisible then
        win:Show()
        ToggleButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
    else
        win:Hide()
        ToggleButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    end
end

ToggleButton.MouseButton1Click:Connect(function()
    ToggleUI()
end)

local draggingEnabled = settings["SquareUIDrag"] or true
local dragActive = false
local dragInput, dragStart, startPos

local function UpdateDrag(input)
    local delta = input.Position - dragStart
    ToggleButton.Position = UDim2.new(0, startPos.X.Offset + delta.X, 0, startPos.Y.Offset + delta.Y)
    UpdateSetting("SquareUI_Pos", ToggleButton.Position)
end

ToggleButton.InputBegan:Connect(function(input)
    if draggingEnabled and (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then
        dragActive = true
        dragStart = input.Position
        startPos = ToggleButton.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragActive = false
            end
        end)
    end
end)

ToggleButton.InputChanged:Connect(function(input)
    if dragActive and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragActive then
        UpdateDrag(input)
    end
end)

uiSettingsTab:Toggle("Enable Dragging for Square UI", function(state)
    UpdateSetting("SquareUIDrag", state)
    draggingEnabled = state
end, settings["SquareUIDrag"])

local walkSpeed = settings["WalkSpeed"] or 16
game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = walkSpeed

clientTab:Textbox("Set Walk Speed", function(value)
    local num = tonumber(value)
    if num then
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = num
        UpdateSetting("WalkSpeed", num)
        print("Walk speed set to: " .. num)
    end
end, tostring(walkSpeed))

local player = game.Players.LocalPlayer

player.CharacterAdded:Connect(function(character)
    task.wait(1)

    if settings["UI_Visible"] then
        win:Show()
    end
    
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    if humanoid then
        humanoid.WalkSpeed = settings["WalkSpeed"] or 16
    end
end)

mainTab:Toggle("Enable Aimbot", function(state)
    UpdateSetting("Aimbot_Enabled", state)
    if state then
        print("Aimbot Enabled")
    else
        print("Aimbot Disabled")
    end
end, settings["Aimbot_Enabled"] or false)

mainTab:Toggle("Enable Trigger Bot", function(state)
    UpdateSetting("TriggerBot_Enabled", state)
    if state then
        print("Trigger Bot Enabled")
    else
        print("Trigger Bot Disabled")
    end
end, settings["TriggerBot_Enabled"] or false)

mainTab:Toggle("Enable ESP", function(state)
    UpdateSetting("ESP_Enabled", state)
    if state then
        print("ESP Enabled")
    else
        print("ESP Disabled")
    end
end, settings["ESP_Enabled"] or false)
